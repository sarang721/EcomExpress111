{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducer/productReducers';\nimport { cartReducer } from './reducer/cartReducers';\nimport { userLoginReducer, userRegisterReducer } from './reducer/userReducer';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer\n});\nconst middleware = [thunk];\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddress\n  }\n};\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/MERN Ecommerce/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","reducer","productList","productDetails","cart","userLogin","userRegister","middleware","cartItemsFromStorage","localStorage","getItem","JSON","parse","shippingAddressFromStorage","initialState","cartItems","shippingAddress","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAAyD,2BAAzD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,gBAAT,EAA0BC,mBAA1B,QAAqD,uBAArD;AAGA,MAAMC,OAAO,GAACT,eAAe,CAAC;AAC1BU,EAAAA,WAAW,EAACN,kBADc;AAE1BO,EAAAA,cAAc,EAACN,qBAFW;AAG1BO,EAAAA,IAAI,EAACN,WAHqB;AAI1BO,EAAAA,SAAS,EAAEN,gBAJe;AAK1BO,EAAAA,YAAY,EAACN;AALa,CAAD,CAA7B;AAWA,MAAMO,UAAU,GAAG,CAACb,KAAD,CAAnB;AAKA,MAAMc,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAKE,MAAMG,0BAA0B,GAAGJ,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACjCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADiC,GAEjC,EAFF;AAMA,MAAMI,YAAY,GAAG;AACnBV,EAAAA,IAAI,EAAE;AACJW,IAAAA,SAAS,EAAEP,oBADP;AAEJQ,IAAAA,eAAe,EAACA;AAFZ;AADa,CAArB;AAWF,MAAMC,KAAK,GAAG1B,WAAW,CACrBU,OADqB,EAErBa,YAFqB,EAGrBnB,mBAAmB,CAACF,eAAe,CAAC,GAAGc,UAAJ,CAAhB,CAHE,CAAzB;AAME,eAAeU,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer ,productDetailsReducer} from './reducer/productReducers';\r\nimport { cartReducer } from './reducer/cartReducers';\r\nimport { userLoginReducer,userRegisterReducer } from './reducer/userReducer';\r\n\r\n\r\nconst reducer=combineReducers({\r\n    productList:productListReducer,\r\n    productDetails:productDetailsReducer,\r\n    cart:cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister:userRegisterReducer\r\n\r\n\r\n\r\n});\r\n\r\nconst middleware = [thunk];\r\n\r\n\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\n\r\n  const shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\n  \r\n\r\n  const initialState = {\r\n    cart: {\r\n      cartItems: cartItemsFromStorage,\r\n      shippingAddress:shippingAddress\r\n  \r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n  )\r\n  \r\n  export default store;"]},"metadata":{},"sourceType":"module"}