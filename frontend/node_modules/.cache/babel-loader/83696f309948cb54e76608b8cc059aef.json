{"ast":null,"code":"import axios from \"axios\";\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'ORDER_CREATE_REQUEST'\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: 'ORDER_CREATE_SUCCESS',\n      payload: data\n    });\n  } catch (e) {\n    dispatch({\n      type: 'ORDER_CREATE_FAIL',\n      payload: e.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'ORDER_DETAILS_REQUEST'\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: 'ORDER_DETAILS_SUCCESS',\n      payload: data\n    });\n  } catch (e) {\n    dispatch({\n      type: 'ORDER_DETAILS_FAIL',\n      payload: e.message\n    });\n  }\n};\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'ORDER_PAY_REQUEST'\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${id}/pay`, paymentResult, config);\n    dispatch({\n      type: 'ORDER_PAY_SUCCESS',\n      payload: data\n    });\n    dispatch({\n      type: 'ORDER_PAY_RESET'\n    });\n  } catch (e) {\n    dispatch({\n      type: 'ORDER_PAY_FAIL',\n      payload: e.message\n    });\n  }\n};\nexport const deliverOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'ORDER_DELIVER_REQUEST'\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config);\n    dispatch({\n      type: 'ORDER_DELIVER_SUCCESS',\n      payload: data\n    });\n    dispatch({\n      type: 'ORDER_DELIVER_RESET'\n    });\n  } catch (e) {\n    dispatch({\n      type: 'ORDER_DELIVER_FAIL',\n      payload: e.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'ORDER_LIST_MY_REQUEST'\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: 'ORDER_LIST_MY_SUCCESS',\n      payload: data\n    });\n  } catch (e) {\n    dispatch({\n      type: 'ORDER_LIST_MY_FAIL',\n      payload: e.message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'ORDER_LIST_REQUEST'\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders`, config);\n    dispatch({\n      type: 'ORDER_LIST_SUCCESS',\n      payload: data\n    });\n  } catch (e) {\n    dispatch({\n      type: 'ORDER_LIST_FAIL',\n      payload: e.message\n    });\n  }\n};","map":{"version":3,"sources":["D:/MERN Ecommerce/frontend/src/actions/orderActions.js"],"names":["axios","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","e","message","getOrderDetails","id","get","payOrder","paymentResult","put","deliverOrder","_id","listMyOrders","listOrders"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: 'ORDER_CREATE_REQUEST',\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.post(`/api/orders`, order, config)\r\n  \r\n      dispatch({\r\n        type: 'ORDER_CREATE_SUCCESS',\r\n        payload: data,\r\n      })\r\n      \r\n    }\r\n\r\n    catch(e){\r\n\r\n        dispatch({\r\n            type: 'ORDER_CREATE_FAIL',\r\n            payload: e.message,\r\n          })\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: 'ORDER_DETAILS_REQUEST',\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.get(`/api/orders/${id}`,config)\r\n  \r\n      dispatch({\r\n        type: 'ORDER_DETAILS_SUCCESS',\r\n        payload: data,\r\n      })\r\n      \r\n      \r\n\r\n    }\r\n\r\n    catch(e){\r\n\r\n        dispatch({\r\n            type: 'ORDER_DETAILS_FAIL',\r\n            payload: e.message,\r\n          })\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const payOrder = (id,paymentResult) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: 'ORDER_PAY_REQUEST',\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/orders/${id}/pay`,paymentResult,config)\r\n\r\n    dispatch({\r\n      type: 'ORDER_PAY_SUCCESS',\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type:'ORDER_PAY_RESET'\r\n    })\r\n    \r\n    \r\n\r\n  }\r\n\r\n  catch(e){\r\n\r\n      dispatch({\r\n          type: 'ORDER_PAY_FAIL',\r\n          payload: e.message,\r\n        })\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: 'ORDER_DELIVER_REQUEST',\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/orders/${order._id}/deliver`,{},config)\r\n\r\n    dispatch({\r\n      type: 'ORDER_DELIVER_SUCCESS',\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type:'ORDER_DELIVER_RESET'\r\n    })\r\n    \r\n    \r\n\r\n  }\r\n\r\n  catch(e){\r\n\r\n      dispatch({\r\n          type: 'ORDER_DELIVER_FAIL',\r\n          payload: e.message,\r\n        })\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: 'ORDER_LIST_MY_REQUEST',\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`,config)\r\n\r\n    dispatch({\r\n      type: 'ORDER_LIST_MY_SUCCESS',\r\n      payload: data,\r\n    })\r\n    \r\n    \r\n\r\n  }\r\n\r\n  catch(e){\r\n\r\n      dispatch({\r\n          type: 'ORDER_LIST_MY_FAIL',\r\n          payload: e.message,\r\n        })\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: 'ORDER_LIST_REQUEST',\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders`,config)\r\n\r\n    dispatch({\r\n      type: 'ORDER_LIST_SUCCESS',\r\n      payload: data,\r\n    })\r\n    \r\n    \r\n\r\n  }\r\n\r\n  catch(e){\r\n\r\n      dispatch({\r\n          type: 'ORDER_LIST_FAIL',\r\n          payload: e.message,\r\n        })\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n  "]},"metadata":{},"sourceType":"module"}