{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducer/productReducers';\nimport { cartReducer } from './reducer/cartReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer\n});\nconst middleware = [thunk];\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    userLogin: {\n      userInfo: userInfoFromStorage\n    }\n  }\n};\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/MERN Ecommerce/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","reducer","productList","productDetails","cart","userLogin","userLoginReducer","middleware","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","cartItems","userInfo","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAAyD,2BAAzD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAGA,MAAMC,OAAO,GAACP,eAAe,CAAC;AAC1BQ,EAAAA,WAAW,EAACJ,kBADc;AAE1BK,EAAAA,cAAc,EAACJ,qBAFW;AAG1BK,EAAAA,IAAI,EAACJ,WAHqB;AAI1BK,EAAAA,SAAS,EAACC;AAJgB,CAAD,CAA7B;AASA,MAAMC,UAAU,GAAG,CAACX,KAAD,CAAnB;AAKA,MAAMY,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAKA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD0B,GAE1B,EAFF;AAIE,MAAMI,YAAY,GAAG;AACnBV,EAAAA,IAAI,EAAE;AACJW,IAAAA,SAAS,EAAEP,oBADP;AAEJH,IAAAA,SAAS,EAAC;AAACW,MAAAA,QAAQ,EAACH;AAAV;AAFN;AADa,CAArB;AAUF,MAAMI,KAAK,GAAGxB,WAAW,CACrBQ,OADqB,EAErBa,YAFqB,EAGrBjB,mBAAmB,CAACF,eAAe,CAAC,GAAGY,UAAJ,CAAhB,CAHE,CAAzB;AAME,eAAeU,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer ,productDetailsReducer} from './reducer/productReducers';\r\nimport { cartReducer } from './reducer/cartReducers';\r\n\r\n\r\nconst reducer=combineReducers({\r\n    productList:productListReducer,\r\n    productDetails:productDetailsReducer,\r\n    cart:cartReducer,\r\n    userLogin:userLoginReducer\r\n\r\n\r\n});\r\n\r\nconst middleware = [thunk];\r\n\r\n\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\n  \r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n? JSON.parse(localStorage.getItem('userInfo'))\r\n: []\r\n\r\n  const initialState = {\r\n    cart: {\r\n      cartItems: cartItemsFromStorage,\r\n      userLogin:{userInfo:userInfoFromStorage}\r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n  )\r\n  \r\n  export default store;"]},"metadata":{},"sourceType":"module"}