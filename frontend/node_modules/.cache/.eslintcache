[{"D:\\MERN Ecommerce\\frontend\\src\\index.js":"1","D:\\MERN Ecommerce\\frontend\\src\\App.js":"2","D:\\MERN Ecommerce\\frontend\\src\\reportWebVitals.js":"3","D:\\MERN Ecommerce\\frontend\\src\\components\\Footer.js":"4","D:\\MERN Ecommerce\\frontend\\src\\components\\Header.js":"5","D:\\MERN Ecommerce\\frontend\\src\\screens\\HomeScreen.js":"6","D:\\MERN Ecommerce\\frontend\\src\\components\\Product.js":"7","D:\\MERN Ecommerce\\frontend\\src\\components\\Rating.js":"8","D:\\MERN Ecommerce\\frontend\\src\\screens\\ProductScreen.js":"9","D:\\MERN Ecommerce\\frontend\\src\\store.js":"10","D:\\MERN Ecommerce\\frontend\\src\\reducer\\productReducers.js":"11","D:\\MERN Ecommerce\\frontend\\src\\actions\\productActions.js":"12","D:\\MERN Ecommerce\\frontend\\src\\components\\Loader.js":"13","D:\\MERN Ecommerce\\frontend\\src\\components\\Message.js":"14","D:\\MERN Ecommerce\\frontend\\src\\screens\\CartScreen.js":"15","D:\\MERN Ecommerce\\frontend\\src\\reducer\\cartReducers.js":"16","D:\\MERN Ecommerce\\frontend\\src\\actions\\cartActions.js":"17","D:\\MERN Ecommerce\\frontend\\src\\components\\FormContainer.js":"18","D:\\MERN Ecommerce\\frontend\\src\\reducer\\userReducer.js":"19","D:\\MERN Ecommerce\\frontend\\src\\screens\\LoginScreen.js":"20","D:\\MERN Ecommerce\\frontend\\src\\actions\\userActions.js":"21","D:\\MERN Ecommerce\\frontend\\src\\screens\\RegisterScreen.js":"22","D:\\MERN Ecommerce\\frontend\\src\\screens\\ShippingScreen.js":"23","D:\\MERN Ecommerce\\frontend\\src\\components\\CheckoutSteps.js":"24","D:\\MERN Ecommerce\\frontend\\src\\screens\\PaymentScreen.js":"25","D:\\MERN Ecommerce\\frontend\\src\\screens\\PlaceOrderScreen.js":"26","D:\\MERN Ecommerce\\frontend\\src\\reducer\\orderReducers.js":"27","D:\\MERN Ecommerce\\frontend\\src\\actions\\orderActions.js":"28","D:\\MERN Ecommerce\\frontend\\src\\screens\\orderScreen.js":"29","D:\\MERN Ecommerce\\frontend\\src\\screens\\OrderScreen.js":"30","D:\\MERN Ecommerce\\frontend\\src\\screens\\MyOrders.js":"31","D:\\MERN Ecommerce\\frontend\\src\\screens\\UserListScreen.js":"32","D:\\MERN Ecommerce\\frontend\\src\\screens\\ProductListScreen.js":"33","D:\\MERN Ecommerce\\frontend\\src\\screens\\CreateProductScreen.js":"34","D:\\MERN Ecommerce\\frontend\\src\\screens\\OrdersScreen.js":"35"},{"size":596,"mtime":1638519552418,"results":"36","hashOfConfig":"37"},{"size":2325,"mtime":1639148729076,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"37"},{"size":345,"mtime":1638447656974,"results":"40","hashOfConfig":"37"},{"size":2811,"mtime":1639147792748,"results":"41","hashOfConfig":"37"},{"size":1907,"mtime":1638952226924,"results":"42","hashOfConfig":"37"},{"size":1029,"mtime":1639246794884,"results":"43","hashOfConfig":"37"},{"size":958,"mtime":1638443619100,"results":"44","hashOfConfig":"37"},{"size":4750,"mtime":1639246779380,"results":"45","hashOfConfig":"37"},{"size":1767,"mtime":1639149968202,"results":"46","hashOfConfig":"37"},{"size":1801,"mtime":1638962200835,"results":"47","hashOfConfig":"37"},{"size":2266,"mtime":1638961209365,"results":"48","hashOfConfig":"37"},{"size":438,"mtime":1638523116621,"results":"49","hashOfConfig":"37"},{"size":248,"mtime":1638523171954,"results":"50","hashOfConfig":"37"},{"size":4071,"mtime":1638549118466,"results":"51","hashOfConfig":"37"},{"size":1127,"mtime":1638784000542,"results":"52","hashOfConfig":"37"},{"size":1203,"mtime":1638783990280,"results":"53","hashOfConfig":"37"},{"size":345,"mtime":1638613403501,"results":"54","hashOfConfig":"37"},{"size":1312,"mtime":1638951008489,"results":"55","hashOfConfig":"37"},{"size":2211,"mtime":1638615191553,"results":"56","hashOfConfig":"37"},{"size":2365,"mtime":1638950987593,"results":"57","hashOfConfig":"37"},{"size":3057,"mtime":1638690073283,"results":"58","hashOfConfig":"37"},{"size":2638,"mtime":1638782865913,"results":"59","hashOfConfig":"37"},{"size":1386,"mtime":1638782672922,"results":"60","hashOfConfig":"37"},{"size":1775,"mtime":1638783953063,"results":"61","hashOfConfig":"37"},{"size":4682,"mtime":1638789050125,"results":"62","hashOfConfig":"37"},{"size":4417,"mtime":1639149927566,"results":"63","hashOfConfig":"37"},{"size":4290,"mtime":1639150315050,"results":"64","hashOfConfig":"37"},{"size":3628,"mtime":1638792287209,"results":"65","hashOfConfig":"37"},{"size":6817,"mtime":1639152143781,"results":"66","hashOfConfig":"37"},{"size":2765,"mtime":1638875692350,"results":"67","hashOfConfig":"37"},{"size":2036,"mtime":1639209212294,"results":"68","hashOfConfig":"37"},{"size":2959,"mtime":1638959147941,"results":"69","hashOfConfig":"37"},{"size":4170,"mtime":1638963073685,"results":"70","hashOfConfig":"37"},{"size":2617,"mtime":1639149446604,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1q7oebw",{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"D:\\MERN Ecommerce\\frontend\\src\\index.js",[],["152","153"],"D:\\MERN Ecommerce\\frontend\\src\\App.js",[],"D:\\MERN Ecommerce\\frontend\\src\\reportWebVitals.js",[],"D:\\MERN Ecommerce\\frontend\\src\\components\\Footer.js",[],"D:\\MERN Ecommerce\\frontend\\src\\components\\Header.js",["154","155","156","157","158"],"\r\nimport React ,{useEffect}from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar,Nav,Container, NavDropdown } from 'react-bootstrap'\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport { logout } from '../actions/userActions';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nconst Header= ()=> {\r\n\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n  return (\r\n\r\n      <Navbar>\r\n      <div className=\"navbar\">\r\n      \r\n                    <Link className=\"link\" to=\"/\"><h1>Ecommerce App</h1></Link>\r\n\r\n                    \r\n                    <ul className=\"unordered\">\r\n\r\n                    {\r\n                     userInfo && userInfo.isAdmin?null:(\r\n\r\n                           <Link  className=\"link\" to=\"/cart\"> <li className=\"lists\"><i className='fas fa-shopping-cart'></i>Cart</li> \r\n                              </Link>\r\n\r\n                        )\r\n                    }\r\n\r\n                            {userInfo && userInfo.isAdmin ?(\r\n\r\n                              <ul className=\"unordered\">\r\n                                <li className=\"lists\">Admin</li>\r\n                                <Link to=\"/admin/users\"><li className=\"lists\">Users</li></Link>\r\n                                      <Link to=\"/admin/products\"> <li className=\"lists\">Products</li></Link>\r\n                                      <Link to=\"/admin/orders\"> <li className=\"lists\">Orders</li></Link>\r\n                                    <li className=\"lists\" onClick={logoutHandler}>Logout</li>\r\n                                      </ul>\r\n\r\n\r\n                                    )\r\n                            \r\n                            \r\n                            :userInfo?\r\n                            (\r\n                              <>\r\n                            <li className=\"lists\">{userInfo.name}</li>\r\n                            <Link className=\"link\" to=\"/myorders\"><li className=\"lists\">My Orders</li></Link>\r\n                            <li className=\"lists\" onClick={logoutHandler}>Logout </li>\r\n                            \r\n                            </>\r\n\r\n                           \r\n                            )\r\n                            \r\n  \r\n                            :<Link className=\"link\" to=\"/login\"><li className=\"lists\"><i className='fas fa-user'></i>Sign In</li></Link>}\r\n                          \r\n                            \r\n                            \r\n                            \r\n            \r\n                              \r\n      \r\n                        </ul>\r\n\r\n\r\n                   \r\n         \r\n          \r\n      </div>\r\n      </Navbar>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","D:\\MERN Ecommerce\\frontend\\src\\screens\\HomeScreen.js",[],"D:\\MERN Ecommerce\\frontend\\src\\components\\Product.js",[],"D:\\MERN Ecommerce\\frontend\\src\\components\\Rating.js",[],"D:\\MERN Ecommerce\\frontend\\src\\screens\\ProductScreen.js",["159"],"import React,{useState,useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport {Row,Col,Image,ListGroup,Card,Button,Form} from 'react-bootstrap'\r\nimport { listProductDetails } from '../actions/productActions';\r\n\r\nconst ProductScreen = ({history,match}) => {\r\n\r\n        const dispatch=useDispatch();\r\n\r\n        const [qty,setQty]=useState(1);\r\n\r\n        const {loading,error,product}=useSelector(state=>state.productDetails);\r\n\r\n       // const [product,setproduct]=useState([]);\r\n\r\n\r\n        useEffect(() => {\r\n\r\n\r\n            dispatch(listProductDetails(match.params.id))\r\n\r\n\r\n            /*\r\n            const fetchproduct=async()=>{\r\n                const res=await axios.get(`/api/products/${match.params.id}`)\r\n                setproduct(res.data);\r\n            \r\n            }\r\n    \r\n            fetchproduct();\r\n\r\n\r\n            */\r\n\r\n        }, [])\r\n\r\n\r\n        const addToCartHandler = () => {\r\n            history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n          }\r\n        \r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Link className=\"btn btn-dark my-3\" to=\"/\">Go Back</Link>\r\n\r\n            {\r\n                loading?<Loader></Loader> : error? <Message variant=\"danger\">{error}</Message>:\r\n\r\n                <Row>\r\n                <Col md={6}>\r\n                <Image  src={product.image} fluid/>\r\n                </Col>\r\n\r\n                <Col md={3}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h3>{product.name}</h3>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Rating value={product.rating} text={`${product.numReviews} reviews`}></Rating>\r\n                        </ListGroup.Item>\r\n\r\n                    \r\n\r\n                        <ListGroup.Item>\r\n                            Description : {product.description}\r\n                        </ListGroup.Item>\r\n\r\n\r\n                    </ListGroup>\r\n                    \r\n                </Col>\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                    Price :\r\n                                    </Col>\r\n                                    <Col>\r\n                                    <strong>Rs {product.price}</strong>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                    Status:\r\n                                    </Col>\r\n                                    <Col>\r\n                                    {product.countInStock>0 ?\"In Stock\":\"Out Of Stock\"}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                onClick={addToCartHandler}\r\n                                className=\"btn-block\" type=\"button\" disabled={product.countInStock===0} >Add To Cart</Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            }\r\n            \r\n\r\n    \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","D:\\MERN Ecommerce\\frontend\\src\\store.js",[],"D:\\MERN Ecommerce\\frontend\\src\\reducer\\productReducers.js",[],"D:\\MERN Ecommerce\\frontend\\src\\actions\\productActions.js",[],"D:\\MERN Ecommerce\\frontend\\src\\components\\Loader.js",[],"D:\\MERN Ecommerce\\frontend\\src\\components\\Message.js",[],"D:\\MERN Ecommerce\\frontend\\src\\screens\\CartScreen.js",["160"],"import React,{useEffect} from 'react'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {Link} from 'react-router-dom';\r\nimport {Row,Col,Image,ListGroup,Card,Button,Form} from 'react-bootstrap'\r\nimport { addToCart ,removeFromCart} from '../actions/cartActions'; //from actions folder\r\n\r\nconst CartScreen = ({match,location,history}) => {\r\n\r\n    const productId=match.params.id\r\n\r\n    const qty=location.search ?Number(location.search.split('=')[1]):1;\r\n\r\n    const dispatch=useDispatch();\r\n\r\n\r\n    const cart=useSelector(state=>state.cart);\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n      }\r\n\r\n    const {cartItems}=cart;\r\n    console.log(cartItems);\r\n\r\n    const removeFromCartHandler = (id) => {\r\n\r\n          dispatch(removeFromCart(id))\r\n    \r\n      }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(productId)\r\n        {\r\n            dispatch(addToCart(productId,qty))\r\n        }\r\n\r\n    }, [dispatch,productId,qty])\r\n\r\n    return (\r\n        <Row >\r\n            <Col md={8}>\r\n\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length===0?<Message>Your Cart is Empty <Link to=\"/\">Go back</Link></Message>:(\r\n                        <ListGroup variant=\"flush\">\r\n                            {cartItems.map(item=>(\r\n                                <ListGroup.Item key={item.product}> \r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image}fluid rounded />\r\n                                    </Col>\r\n\r\n                                    <Col md={3}>\r\n                                        <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n\r\n                                    </Col>\r\n                                    <Col md={2}>Rs {item.price}</Col>\r\n\r\n                                    <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                                </Row>\r\n\r\n                                </ListGroup.Item>\r\n\r\n                            ))}\r\n\r\n                        </ListGroup>\r\n\r\n                )}\r\n            </Col>\r\n                        \r\n            <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              Rs\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>     \r\n\r\n\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","D:\\MERN Ecommerce\\frontend\\src\\reducer\\cartReducers.js",[],"D:\\MERN Ecommerce\\frontend\\src\\actions\\cartActions.js",[],"D:\\MERN Ecommerce\\frontend\\src\\components\\FormContainer.js",[],"D:\\MERN Ecommerce\\frontend\\src\\reducer\\userReducer.js",[],"D:\\MERN Ecommerce\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\MERN Ecommerce\\frontend\\src\\actions\\userActions.js",[],"D:\\MERN Ecommerce\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\MERN Ecommerce\\frontend\\src\\screens\\ShippingScreen.js",["161"],"import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({history}) => {\r\n\r\n\r\n    const dispatch=useDispatch();\r\n\r\n\r\n\r\n\r\n    const cart=useSelector(state=>state.cart)\r\n\r\n    const {shippingAddress}=cart;\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault();\r\n\r\n        dispatch(saveShippingAddress({address,city,postalCode,country}))\r\n        history.push('/payment')\r\n\r\n    }\r\n\r\n    return (\r\n            <FormContainer>\r\n                \r\n                <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n            </FormContainer>       \r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","D:\\MERN Ecommerce\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\MERN Ecommerce\\frontend\\src\\screens\\PaymentScreen.js",["162"],"import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  if (!shippingAddress.address) {\r\n    history.push('/shipping')\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push('/placeorder')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n     \r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n             <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen","D:\\MERN Ecommerce\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"D:\\MERN Ecommerce\\frontend\\src\\reducer\\orderReducers.js",[],"D:\\MERN Ecommerce\\frontend\\src\\actions\\orderActions.js",[],"D:\\MERN Ecommerce\\frontend\\src\\screens\\orderScreen.js",["163","164","165","166"],"D:\\MERN Ecommerce\\frontend\\src\\screens\\OrderScreen.js",["167"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder\r\n} from '../actions/orderActions'\r\n\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n \r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || successPay || successDeliver) {\r\n      dispatch({ type: 'ORDER_PAY_RESET' })\r\n      dispatch({type:'ORDER_DELIVER_RESET'})\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successDeliver,successPay,order])\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n\r\n  const deliverHandler=()=>{\r\n\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n \r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x Rs{item.price} = Rs{item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>Rs 40</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              \r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>Rs {order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && userInfo && !userInfo.isAdmin && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n\r\n{loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n              \r\n  \r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen","D:\\MERN Ecommerce\\frontend\\src\\screens\\MyOrders.js",["168"],"import React,{useEffect} from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nconst MyOrders = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderListMy = useSelector((state) => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n    \r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n          } else {\r\n           \r\n                \r\n                dispatch(listMyOrders())\r\n\r\n          }\r\n       \r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <Row>\r\n            \r\n            <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <Link to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n            \r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default MyOrders\r\n","D:\\MERN Ecommerce\\frontend\\src\\screens\\UserListScreen.js",["169","170","171"],"import React, { useEffect } from 'react'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers} from '../actions/userActions'\r\nimport { Link } from 'react-router-dom' \r\n\r\n\r\nconst UserListScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n\r\n  const deleteHandler=()=>{\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n        dispatch(listUsers())\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n  }, [dispatch,userInfo,history])\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>  \r\n            {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users && users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                \r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","D:\\MERN Ecommerce\\frontend\\src\\screens\\ProductListScreen.js",[],"D:\\MERN Ecommerce\\frontend\\src\\screens\\CreateProductScreen.js",["172","173"],"import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { addProduct } from '../actions/productActions'\r\n\r\n\r\nconst CreateProductScreen = ({ match, history }) => {\r\n  \r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  \r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productAdded=useSelector(state=>state.productAdded);\r\n\r\n  const {loading,success,error}=productAdded;\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n      \r\n     \r\n  }, [])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addProduct({\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n    }))\r\n\r\n    if(success)\r\n    history.push('/admin/products')\r\n        \r\n    \r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n    <h1>Add Product</h1>\r\n    {error && <Message variant='danger'>{error}</Message>}\r\n    {loading && <Loader />}\r\n    <Form onSubmit={submitHandler}>\r\n     \r\n    <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter countInStock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n      \r\n\r\n      <Button type='submit' variant='primary'>\r\n        Add \r\n      </Button>\r\n    </Form>\r\n\r\n    \r\n  </FormContainer>\r\n  )\r\n}\r\n\r\nexport default CreateProductScreen","D:\\MERN Ecommerce\\frontend\\src\\screens\\OrdersScreen.js",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":2,"column":16,"nodeType":"180","messageId":"181","endLine":2,"endColumn":25},{"ruleId":"178","severity":1,"message":"182","line":4,"column":17,"nodeType":"180","messageId":"181","endLine":4,"endColumn":20},{"ruleId":"178","severity":1,"message":"183","line":4,"column":21,"nodeType":"180","messageId":"181","endLine":4,"endColumn":30},{"ruleId":"178","severity":1,"message":"184","line":4,"column":32,"nodeType":"180","messageId":"181","endLine":4,"endColumn":43},{"ruleId":"178","severity":1,"message":"185","line":7,"column":10,"nodeType":"180","messageId":"181","endLine":7,"endColumn":23},{"ruleId":"186","severity":1,"message":"187","line":39,"column":12,"nodeType":"188","endLine":39,"endColumn":14,"suggestions":"189"},{"ruleId":"178","severity":1,"message":"190","line":4,"column":8,"nodeType":"180","messageId":"181","endLine":4,"endColumn":14},{"ruleId":"178","severity":1,"message":"191","line":5,"column":8,"nodeType":"180","messageId":"181","endLine":5,"endColumn":21},{"ruleId":"178","severity":1,"message":"191","line":5,"column":8,"nodeType":"180","messageId":"181","endLine":5,"endColumn":21},{"ruleId":"178","severity":1,"message":"192","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":25},{"ruleId":"178","severity":1,"message":"193","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":13},{"ruleId":"178","severity":1,"message":"194","line":4,"column":44,"nodeType":"180","messageId":"181","endLine":4,"endColumn":50},{"ruleId":"186","severity":1,"message":"195","line":28,"column":6,"nodeType":"188","endLine":28,"endColumn":8,"suggestions":"196"},{"ruleId":"186","severity":1,"message":"197","line":66,"column":6,"nodeType":"188","endLine":66,"endColumn":58,"suggestions":"198"},{"ruleId":"178","severity":1,"message":"199","line":2,"column":17,"nodeType":"180","messageId":"181","endLine":2,"endColumn":21},{"ruleId":"178","severity":1,"message":"194","line":2,"column":17,"nodeType":"180","messageId":"181","endLine":2,"endColumn":23},{"ruleId":"178","severity":1,"message":"200","line":7,"column":10,"nodeType":"180","messageId":"181","endLine":7,"endColumn":14},{"ruleId":"178","severity":1,"message":"201","line":21,"column":9,"nodeType":"180","messageId":"181","endLine":21,"endColumn":22},{"ruleId":"178","severity":1,"message":"193","line":1,"column":8,"nodeType":"180","messageId":"181","endLine":1,"endColumn":13},{"ruleId":"178","severity":1,"message":"200","line":3,"column":10,"nodeType":"180","messageId":"181","endLine":3,"endColumn":14},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'Container' is defined but never used.","'NavDropdown' is defined but never used.","'LinkContainer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["204"],"'Loader' is defined but never used.","'CheckoutSteps' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'orderId'. Either include them or remove the dependency array.",["205"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["206"],"'Form' is defined but never used.","'Link' is defined but never used.","'deleteHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [dispatch, match.params.id]",{"range":"213","text":"214"},"Update the dependencies array to be: [dispatch, orderId]",{"range":"215","text":"216"},"Update the dependencies array to be: [dispatch, orderId, successDeliver, successPay, order, userInfo, history]",{"range":"217","text":"218"},[1058,1060],"[dispatch, match.params.id]",[728,730],"[dispatch, orderId]",[2006,2058],"[dispatch, orderId, successDeliver, successPay, order, userInfo, history]"]